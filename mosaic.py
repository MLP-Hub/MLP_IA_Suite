# -*- coding: utf-8 -*-
"""
/***************************************************************************
 MLP_IA_Suite
                                 A QGIS plugin
 This plugin contains an end-to-end workflow for analysing terrestrial oblique images 
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2022-12-15
        git sha              : $Format:%H$
        copyright            : (C) 2022 by Claire Wright | Mountain Legacy Project
        email                : claire.wright.mi@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.PyQt.QtWidgets import QFileDialog
from PyQt5.QtCore import Qt

def addLayer(filter_string, listWidget):
    """Users provides raster layer to add to list"""
    dialog = QFileDialog()
    dialog.setFileMode(QFileDialog.ExistingFiles)
    dialog.setOption(dialog.DontUseNativeDialog)
    dialog.setNameFilter(filter_string)

    if dialog.exec_():
        filepaths = dialog.selectedFiles() # get user selected file(s)
        for filepath in filepaths:
            match = listWidget.findItems(filepath,Qt.MatchExactly) # check to ensure filepath doesn't exist already
            if len(match) == 0:
                listWidget.addItem(filepath) # if not a duplicate, add filepath to list

def removeLayer(listWidget):
    """Removes selected layer from layer list"""

    row = listWidget.currentRow()
    listWidget.takeItem(row)
